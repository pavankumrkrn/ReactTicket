{"version":3,"sources":["TicketForm.js","modal.js","TicketsTable.js","App.js","reportWebVitals.js","index.js"],"names":["TicketForm","props","React","useState","name","setName","desc","setDesc","className","action","htmlFor","type","value","onChange","e","target","id","required","cols","rows","onClick","obj","description","status","create","Mdl","show","setShow","ticket","setStatus","handleShow","Modal","isOpen","toggle","ModalFooter","Button","variant","fetch","method","headers","body","JSON","stringify","TicketsTable","tks","map","i","index","btn","text","delete","App","tickets","setTickets","useEffect","then","data","json","concat","sort","a","b","reverse","console","log","window","location","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2140c72f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const TicketForm = (props) => {\r\n    const [name, setName] = React.useState('');\r\n    const [desc, setDesc] = React.useState('');\r\n\r\n    const formOnSubmit = (e) => {\r\n        let obj = {\r\n            id: 0,\r\n            name:name,\r\n            description: desc,\r\n            status : 'created'\r\n        }\r\n        props.create(obj);\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-sm-12\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"card-title\">\r\n                            <p className=\"h1 text-center\">Raise a query</p>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"card-text\">\r\n                            <form action=\"\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-4\">\r\n                                        <label htmlFor=\"name\">Name</label>\r\n                                        <input type=\"text\" value={name} onChange={(e)=>{\r\n                                            setName(e.target.value)\r\n                                        }}\r\n                                        id='name' className=\"form-control\" required />\r\n                                    </div>\r\n                                    <div className=\"col-sm-4\">\r\n                                        <label htmlFor=\"desc\">Description</label>\r\n                                        <textarea name=\"desc\" required value={desc} onChange={(e)=>{\r\n                                            setDesc(e.target.value)\r\n                                        }}\r\n                                        id=\"desc\" cols=\"10\" rows=\"1\" className=\"form-control\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mt-5 justify-content-start\">\r\n                                <div className=\"col-sm-4\">\r\n                                        <div className=\"col-sm-12 mt-3\">\r\n                                            <button className=\"btn btn-primary\" type='submit' onClick={formOnSubmit}>Raise Query</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Button, Modal, ModalFooter } from 'reactstrap';\r\nexport const Mdl = (props) => {\r\n    const [show, setShow] = React.useState(false);\r\n    const [name, setName] = React.useState(props.ticket.name);\r\n    const [status, setStatus] = React.useState(props.ticket.status);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {\r\n        setShow(true);\r\n    }\r\n    const handleSubmit = () => {\r\n        props.ticket.name =  name;\r\n        props.ticket.status = status;\r\n        fetch('https://6018e165971d850017a40575.mockapi.io/tickets/'+props.ticket.id, {\r\n            method : 'PUT',\r\n            headers: { \r\n                'Content-type': 'application/json'\r\n              },\r\n            body : JSON.stringify(props.ticket)  \r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <i className=\"fad fa-edit\" onClick={handleShow}></i>\r\n            <Modal isOpen={show} toggle={handleShow}>\r\n                <p className=\"h2 text-center mt-3\">Update</p>\r\n                <form action=\"\">\r\n                    <div className=\"container mt-5\">\r\n                        <div className=\"row justify-content-center mb-5\">\r\n                            <div className=\"col-sm-10\">\r\n                                <label htmlFor=\"name\">Name</label>\r\n                                <input type=\"text\" value={name} \r\n                                onChange={(e)=>{\r\n                                    setName(e.target.value)\r\n                                }}\r\n                                className=\"form-control\" />\r\n                            </div>\r\n                            <div className=\"col-sm-10\">\r\n                                <label htmlFor=\"status\">Status</label>\r\n                                <select name=\"status\" id=\"status\"\r\n                                value={status} \r\n                                onChange={(e)=>{\r\n                                    setStatus(e.target.value)\r\n                                }}\r\n                                className=\"form-control\" >\r\n                                    <option value=\"\">--Select--</option>\r\n                                    <option value=\"created\">Created</option>\r\n                                    <option value=\"processing\">Processing</option>\r\n                                    <option value=\"resolved\">Resolved</option>\r\n                                    <option value=\"rejected\">Rejected</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center mb-5\">\r\n                        <ModalFooter>\r\n                            <Button variant=\"secondary\" type='button' onClick={handleClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" type='submit' onClick={handleSubmit}>\r\n                                Save Changes\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import { Mdl } from \"./modal\";\r\nexport const TicketsTable = (props) => {\r\n    return (\r\n        <div className=\"row mt-5\">\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-center\">Ticket Name</th>\r\n                            <th className=\"text-center\">Description</th>\r\n                            <th className=\"text-center\">Status</th>\r\n                            <th className=\"text-center\">Update</th>\r\n                            <th className=\"text-center\">Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.tks.map((i, index) => {\r\n                            let btn = ''\r\n                            switch (i.status) {\r\n                                case 'created':\r\n                                    btn = 'primary';\r\n                                    break;\r\n                                case 'processing':\r\n                                    btn = 'warning';\r\n                                    break;\r\n                                case 'resolved':\r\n                                    btn = 'success';\r\n                                    break;\r\n                                case 'rejected':\r\n                                    btn = 'danger';\r\n                                    break;\r\n                            }\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td className=\"text-center\">{i.name}</td>\r\n                                    <td className=\"text-center\">{i.description}</td>\r\n                                    <td className=\"text-center\">\r\n                                        <button className={'btn btn-' + btn + ' btn-sm'}>{i.status}</button></td>\r\n                                    <td className=\"text-center\"><Mdl text={i.name} ticket={i} /></td>\r\n                                    <td className=\"text-center\" onClick={() => {\r\n                                        props.delete(i.id)\r\n                                    }}><i className=\"fas fa-trash-alt\"></i></td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n        </div>\r\n    )\r\n}","import { TicketForm } from \"./TicketForm\";\nimport { TicketsTable } from \"./TicketsTable\";\nimport React from 'react';\n\n\nexport const App = () => {\n  \n  const[tickets, setTickets] = React.useState([]);\n  \n  React.useEffect(()=>{\n    fetch('https://6018e165971d850017a40575.mockapi.io/tickets').then((data)=>{\n      return data.json();\n    }).then((data)=>{\n      setTickets(tickets.concat(data));\n    })\n  },[]);\n\n  const createTicket = (obj) => {\n    obj.id = +(tickets.sort((a,b)=>a.id-b.id).reverse()[0].id)+1\n    console.log(obj)\n    fetch('https://6018e165971d850017a40575.mockapi.io/tickets',{\n      method : 'POST',\n      headers: { \n        'Content-type': 'application/json'\n            },\n      body : JSON.stringify(obj)  \n    })\n  }\n\n  const deleteTicket = (id) => {\n    fetch('https://6018e165971d850017a40575.mockapi.io/tickets/'+id,{\n      method : 'DELETE',\n      headers: { \n        'Content-type': 'application/json'\n      } \n    }).then(()=>{\n      window.location.reload(false);\n    });\n  }\n\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n        <TicketForm create={createTicket}/>\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        <p className=\"h1 mt-5 text-center\">Tickets</p>\n      </div>\n      <hr/>\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n        <TicketsTable tks={tickets} delete={deleteTicket} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}